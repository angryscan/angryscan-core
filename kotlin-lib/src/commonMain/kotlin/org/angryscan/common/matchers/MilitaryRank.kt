package org.angryscan.common.matchers

import kotlinx.serialization.Serializable
import org.angryscan.common.engine.hyperscan.IHyperMatcher
import org.angryscan.common.engine.ExpressionOption
import org.angryscan.common.engine.kotlin.IKotlinMatcher

@Serializable
object MilitaryRank : IHyperMatcher, IKotlinMatcher {
    override val name = "Military Rank"
    override val javaPatterns = listOf(
        """
        (?ix)
        (?<![\p{L}\d\p{S}\p{P}])
        (?:воинское\s+звание|звание|чин|военный\s+чин)?
        \s*[:\-]?\s*
        (
          рядовой|матрос|ефрейтор|старший\s+матрос|
          младший\s+сержант|старшина\s+2\s+статьи|
          сержант|старшина\s+1\s+статьи|
          старший\s+сержант|главный\s+старшина|
          старшина|главный\s+корабельный\s+старшина|
          прапорщик|мичман|старший\s+прапорщик|старший\s+мичман|
          младший\s+лейтенант|лейтенант|старший\s+лейтенант|
          капитан|капитан-лейтенант|
          майор|капитан\s+3\s+ранга|
          подполковник|капитан\s+2\s+ранга|
          полковник|капитан\s+1\s+ранга|
          генерал-майор|контр-адмирал|
          генерал-лейтенант|вице-адмирал|
          генерал-полковник|адмирал|
          генерал\s+армии|адмирал\s+флота|
          маршал\s+Российской\s+Федерации
        )
        (?:\s+(?:медицинской\s+службы|ветеринарной\s+службы|юстиции|технической\s+службы)?)?
        (?![\p{L}\d\p{S}\p{P}])
        """.trimIndent()
    )
    override val regexOptions = setOf(
        RegexOption.IGNORE_CASE,
        RegexOption.MULTILINE
    )

    override val hyperPatterns: List<String> = listOf(
        """(?:^|[\s\r\n])рядово[йгмяе](?:[\s\r\n]|$)""",
        """(?:^|[\s\r\n])матрос[аеуым]?(?:[\s\r\n]|$)""",
        """(?:^|[\s\r\n])ефрейтор[аеуым]?(?:[\s\r\n]|$)""",
        """(?:^|[\s\r\n])(?:младши[йгемя]|старши[йгемя])?\s*сержант[аеуым]?(?:[\s\r\n]|$)""",
        """(?:^|[\s\r\n])старшин[аыеуой](?:\s+[12]\s+стать[ия])?(?:[\s\r\n]|$)""",
        """(?:^|[\s\r\n])главн(?:ый|ого|ому|ым|ом)\s+(?:старшин[аыеуой]|корабельн(?:ый|ого|ому|ым|ом)\s+старшин[аыеуой])(?:[\s\r\n]|$)""",
        """(?:^|[\s\r\n])(?:старши[йгемя]\s+)?прапорщик[аеуым]?(?:[\s\r\n]|$)""",
        """(?:^|[\s\r\n])(?:старши[йгемя]\s+)?мичман[аеуым]?(?:[\s\r\n]|$)""",
        """(?:^|[\s\r\n])(?:младши[йгемя]|старши[йгемя])?\s*лейтенант[аеуым]?(?:[\s\r\n]|$)""",
        """(?:^|[\s\r\n])капитан[аеуым]?(?:-лейтенант[аеуым]?|\s+[123]\s+ранг[ау])?(?:[\s\r\n]|$)""",
        """(?:^|[\s\r\n])майор[аеуым]?(?:[\s\r\n]|$)""",
        """(?:^|[\s\r\n])подполковник[аеуым]?(?:[\s\r\n]|$)""",
        """(?:^|[\s\r\n])полковник[аеуым]?(?:[\s\r\n]|$)""",
        """(?:^|[\s\r\n])генерал[аеуым]?(?:-(?:майор[аеуым]?|лейтенант[аеуым]?|полковник[аеуым]?)|\s+арми[ия])?(?:[\s\r\n]|$)""",
        """(?:^|[\s\r\n])(?:контр-|вице-)?адмирал[аеуым]?(?:\s+флот[ау])?(?:[\s\r\n]|$)""",
        """(?:^|[\s\r\n])маршал[аеуым]?\s+Российско[йгемя]\s+Федераци[ия](?:[\s\r\n]|$)"""
    )
    override val expressionOptions = setOf(
        ExpressionOption.MULTILINE,
        ExpressionOption.CASELESS,
        ExpressionOption.UTF8
    )

    override fun check(value: String): Boolean = true

    override fun toString() = name
}
