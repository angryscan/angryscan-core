package org.angryscan.common.matchers

import kotlinx.serialization.Serializable
import org.angryscan.common.engine.hyperscan.IHyperMatcher
import org.angryscan.common.engine.ExpressionOption
import org.angryscan.common.engine.kotlin.IKotlinMatcher

@Serializable
object MilitaryRank : IHyperMatcher, IKotlinMatcher {
    override val name = "Military Rank"
    override val javaPatterns = listOf(
        """
        (?ix)
        (?<![\p{L}\d])
        (?:воинское\s+звание|звание|чин|военный\s+чин)?
        \s*[:\-]?\s*
        (
          главный\s+корабельный\s+старшина|
          главный\s+старшина|
          старшина\s+2\s+статьи|
          старшина\s+1\s+статьи|
          старшина|
          старший\s+матрос|
          старший\s+сержант|
          младший\s+сержант|
          сержант|
          старший\s+прапорщик|
          прапорщик|
          старший\s+мичман|
          мичман|
          младший\s+лейтенант|
          старший\s+лейтенант|
          капитан-лейтенант|
          капитан\s+3\s+ранга|
          капитан\s+2\s+ранга|
          капитан\s+1\s+ранга|
          капитан|
          лейтенант|
          генерал-майор|
          генерал-лейтенант|
          генерал-полковник|
          генерал\s+армии|
          контр-адмирал|
          вице-адмирал|
          адмирал\s+флота|
          адмирал|
          майор|
          подполковник|
          полковник|
          маршал\s+Российской\s+Федерации|
          рядовой|
          матрос|
          ефрейтор
        )
        (?:\s+(?:медицинской\s+службы|ветеринарной\s+службы|юстиции|технической\s+службы)?)?
        (?![\p{L}\d])
        """.trimIndent()
    )
    override val regexOptions = setOf(
        RegexOption.IGNORE_CASE,
        RegexOption.MULTILINE
    )

    override val hyperPatterns: List<String> = listOf(
        """(?:^|[\s\r\n()\"\'\[\]\{\};,.:\.!?])рядово[йгмяе](?:[\s\r\n()\"\'\[\]\{\};,.:\.!?]|$)""",
        """(?:^|[\s\r\n()\"\'\[\]\{\};,.:\.!?])матрос[аеуым]?(?:[\s\r\n()\"\'\[\]\{\};,.:\.!?]|$)""",
        """(?:^|[\s\r\n()\"\'\[\]\{\};,.:\.!?])ефрейтор[аеуым]?(?:[\s\r\n()\"\'\[\]\{\};,.:\.!?]|$)""",
        """(?:^|[\s\r\n()\"\'\[\]\{\};,.:\.!?])(?:младши[йгемя]|старши[йгемя])?\s*сержант[аеуым]?(?:[\s\r\n()\"\'\[\]\{\};,.:\.!?]|$)""",
        """(?:^|[\r\n()\"\'\[\]\{\};,.:\.!?])старшин[аыеуой](?:\s+[12]\s+стать[ия])?(?:[\s\r\n()\"\'\[\]\{\};,.:\.!?]|$)""",
        """(?:^|[\s\r\n()\"\'\[\]\{\};,.:\.!?])главн(?:ый|ого|ому|ым|ом)\s+(?:старшин[аыеуой]|корабельн(?:ый|ого|ому|ым|ом)\s+старшин[аыеуой])(?:[\s\r\n()\"\'\[\]\{\};,.:\.!?]|$)""",
        """(?:^|[\s\r\n()\"\'\[\]\{\};,.:\.!?])(?:старши[йгемя]\s+)?прапорщик[аеуым]?(?:[\s\r\n()\"\'\[\]\{\};,.:\.!?]|$)""",
        """(?:^|[\s\r\n()\"\'\[\]\{\};,.:\.!?])(?:старши[йгемя]\s+)?мичман[аеуым]?(?:[\s\r\n()\"\'\[\]\{\};,.:\.!?]|$)""",
        """(?:^|[\s\r\n()\"\'\[\]\{\};,.:\.!?])(?:младши[йгемя]|старши[йгемя])?\s*лейтенант[аеуым]?(?:[\s\r\n()\"\'\[\]\{\};,.:\.!?]|$)""",
        """(?:^|[\s\r\n()\"\'\[\]\{\};,.:\.!?])капитан[аеуым]?(?:-лейтенант[аеуым]?|\s+[123]\s+ранг[ау])?(?:[\s\r\n()\"\'\[\]\{\};,.:\.!?]|$)""",
        """(?:^|[\s\r\n()\"\'\[\]\{\};,.:\.!?])майор[аеуым]?(?:[\s\r\n()\"\'\[\]\{\};,.:\.!?]|$)""",
        """(?:^|[\s\r\n()\"\'\[\]\{\};,.:\.!?])подполковник[аеуым]?(?:[\s\r\n()\"\'\[\]\{\};,.:\.!?]|$)""",
        """(?:^|[\s\r\n()\"\'\[\]\{\};,.:\.!?])полковник[аеуым]?(?:[\s\r\n()\"\'\[\]\{\};,.:\.!?]|$)""",
        """(?:^|[\s\r\n()\"\'\[\]\{\};,.:\.!?])генерал[аеуым]?(?:-(?:майор[аеуым]?|лейтенант[аеуым]?|полковник[аеуым]?)|\s+арми[ия])?(?:[\s\r\n()\"\'\[\]\{\};,.:\.!?]|$)""",
        """(?:^|[\s\r\n()\"\'\[\]\{\};,.:\.!?])(?:контр-|вице-)?адмирал[аеуым]?(?:\s+флот[ау])?(?:[\s\r\n()\"\'\[\]\{\};,.:\.!?]|$)""",
        """(?:^|[\s\r\n()\"\'\[\]\{\};,.:\.!?])маршал[аеуым]?\s+Российско[йгемя]\s+Федераци[ия](?:[\s\r\n()\"\'\[\]\{\};,.:\.!?]|$)"""
    )
    override val expressionOptions = setOf(
        ExpressionOption.MULTILINE,
        ExpressionOption.CASELESS,
        ExpressionOption.UTF8
    )

    override fun check(value: String): Boolean = true

    override fun toString() = name
}
