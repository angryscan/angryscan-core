package org.angryscan.common.matchers

import kotlinx.serialization.Serializable
import org.angryscan.common.engine.hyperscan.IHyperMatcher
import org.angryscan.common.engine.ExpressionOption
import org.angryscan.common.engine.kotlin.IKotlinMatcher

@Serializable
object EducationLevel : IHyperMatcher, IKotlinMatcher {
    override val name = "Education Level"
    override val javaPatterns = listOf(
        """(?:^|[\s\r\n\(\[\{«"'])дошкольное\s+образование(?:$|[\s\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\s\r\n\(\[\{«"'])(?:начальное|основное|среднее)\s+общее\s+образование(?:$|[\s\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\s\r\n\(\[\{«"'])(?:начальное|основное|среднее)\s+общее(?:$|[\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\s\r\n\(\[\{«"'])среднее\s+профессиональное\s+образование(?:$|[\s\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\s\r\n\(\[\{«"'])среднее\s+профессиональное(?:$|[\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\s\r\n\(\[\{«"'])начальное\s+профессиональное\s+образование(?:$|[\s\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\s\r\n\(\[\{«"'])начальное\s+профессиональное(?:$|[\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\s\r\n\(\[\{«"'])высшее\s+образование(?:$|[\s\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\s\r\n\(\[\{«"'])высшее(?:$|[\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\s\r\n\(\[\{«"'])бакалавриат[а-яё]{0,2}(?:$|[\s\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\s\r\n\(\[\{«"'])специалитет[а-яё]{0,2}(?:$|[\s\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\s\r\n\(\[\{«"'])магистратур[а-яё]{0,2}(?:$|[\s\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\s\r\n\(\[\{«"'])аспирантур[а-яё]{0,2}(?:$|[\s\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\s\r\n\(\[\{«"'])ординатур[а-яё]{0,2}(?:$|[\s\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\r\n])бакалавриат(?:$|[\r\n])""",
        """(?:^|[\r\n])магистратура(?:$|[\r\n])""",
        """(?:^|[\r\n])аспирантура(?:$|[\r\n])""",
        """(?:^|[\r\n])специалитет(?:$|[\r\n])""",
        """(?:^|[\s\r\n\(\[\{«"'])бакалавр[а-яё]{0,2}(?:$|[\s\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\s\r\n\(\[\{«"'])магистр[а-яё]{0,2}(?:$|[\s\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\s\r\n\(\[\{«"'])аспирант[а-яё]{0,2}(?:$|[\s\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\s\r\n\(\[\{«"'])специалист[а-яё]{0,2}(?:$|[\s\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\r\n])специалист(?:$|[\r\n])""",
        """(?:^|[\r\n])СПО(?:$|[\r\n])""",
        """(?:^|[\r\n])НПО(?:$|[\r\n])""",
        """(?:^|[\r\n])ВО(?:$|[\r\n])""",
        """(?:^|[\r\n])ДПО(?:$|[\r\n])""",
        """(?:^|[\s\r\n\(\[\{«"'])дополнительно[ея]\s+профессионально[ея]\s+образовани[ея](?:$|[\s\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\s\r\n\(\[\{«"'])дополнительно[ея]\s+образовани[ея](?:$|[\s\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\s\r\n\(\[\{«"'])профессиональн[а-яё]+\s+переподготовк[а-яё]+(?:$|[\s\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\s\r\n\(\[\{«"'])повышени[ея]\s+квалификаци[ия](?:$|[\s\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\s\r\n\(\[\{«"'])ассистентур[а-яё-]+стажировк[а-яё]+(?:$|[\s\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\r\n])ассистентура-стажировка(?:$|[\r\n])""",
        """(?:^|[\s\r\n\(\[\{«"'])подготовк[а-яё]+\s+кадров\s+высш[ея][еи]?\s+квалификаци[ия][а-яё]*?(?:$|[\s\r\n\)\]\}»"'.,;:!?])""",
        """(?:^|[\r\n])подготовка\s+кадров\s+высшей\s+квалификации(?:$|[\r\n])"""
    )
    override val regexOptions = setOf(
        RegexOption.IGNORE_CASE,
        RegexOption.MULTILINE
    )

    override val hyperPatterns: List<String> = javaPatterns
    override val expressionOptions = setOf(
        ExpressionOption.MULTILINE,
        ExpressionOption.CASELESS,
        ExpressionOption.UTF8
    )

    override fun check(value: String): Boolean = true

    override fun toString() = name
}
